// <auto-generated />
using System;
using MISAPI.DataModel.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MISAPI.DataModel.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MISAPI.DataModel.Models.Accounts.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<int>("CouncilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<long?>("UpdateLogId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserLogId")
                        .HasColumnType("bigint");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CouncilId");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptTerms = true,
                            CouncilId = 1,
                            CreatedOn = new DateTime(2023, 1, 16, 0, 53, 1, 615, DateTimeKind.Local).AddTicks(3854),
                            Email = "info@mis.org",
                            FirstName = "The Supreme",
                            LastName = "Knight",
                            MiddleName = " SK",
                            PasswordHash = "$2a$11$mgOmUOZ6TTI6m2fV.ZTMEObTdXuWSovDU9Osi8pox6GbQr3TxMGdi",
                            RoleId = 1,
                            Verified = new DateTime(2023, 1, 16, 0, 53, 1, 615, DateTimeKind.Local).AddTicks(4009)
                        });
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Councils.Council", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ConsecreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CouncilTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<long?>("UpdateLogId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserLogId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CouncilTypeId");

                    b.HasIndex("CountryId");

                    b.ToTable("Councils");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "SecondI, Ghana",
                            ConsecreatedOn = new DateTime(1926, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CouncilTypeId = 1,
                            CountryId = 1,
                            CreatedOn = new DateTime(2023, 1, 16, 0, 53, 1, 614, DateTimeKind.Local).AddTicks(5679),
                            No = 1
                        });
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Councils.CouncilType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CouncilType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Councils of the order",
                            Name = "COUNCIL"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Courts of the order",
                            Name = "COURT"
                        });
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Councils.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "Cedis",
                            CurrencySymbol = "C",
                            Name = "Ghana",
                            Nationality = "Ghanian"
                        });
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Action", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UpdateLogId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserLogId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Module", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UpdateLogId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserLogId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UpdateLogId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserLogId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 1, 16, 0, 53, 1, 614, DateTimeKind.Local).AddTicks(8603),
                            Description = "The super admin roles",
                            Enabled = true,
                            IsDeleted = false,
                            Name = "Super Admin",
                            UserLogId = 0L
                        });
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("TaskId")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<long?>("UpdateLogId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserLogId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TaskId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Task", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Accounts.Account", b =>
                {
                    b.HasOne("MISAPI.DataModel.Models.Councils.Council", "Council")
                        .WithMany()
                        .HasForeignKey("CouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MISAPI.DataModel.Models.Roles.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("MISAPI.DataModel.Models.Accounts.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<int>("AccountId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)");

                            b1.HasKey("Id");

                            b1.HasIndex("AccountId");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("Account")
                                .HasForeignKey("AccountId");

                            b1.Navigation("Account");
                        });

                    b.Navigation("Council");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Councils.Council", b =>
                {
                    b.HasOne("MISAPI.DataModel.Models.Councils.CouncilType", "CouncilType")
                        .WithMany("Councils")
                        .HasForeignKey("CouncilTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MISAPI.DataModel.Models.Councils.Country", "Country")
                        .WithMany("Councils")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CouncilType");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.RolePermission", b =>
                {
                    b.HasOne("MISAPI.DataModel.Models.Roles.Action", null)
                        .WithMany("RolePermissions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MISAPI.DataModel.Models.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MISAPI.DataModel.Models.Roles.Task", null)
                        .WithMany("RolePermissions")
                        .HasForeignKey("TaskId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Task", b =>
                {
                    b.HasOne("MISAPI.DataModel.Models.Roles.Module", "Module")
                        .WithMany("Tasks")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Councils.CouncilType", b =>
                {
                    b.Navigation("Councils");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Councils.Country", b =>
                {
                    b.Navigation("Councils");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Action", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Module", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("MISAPI.DataModel.Models.Roles.Task", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
